// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserApi.Context;

#nullable disable

namespace PokemonApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240820075331_populandotabela")]
    partial class populandotabela
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PokedexApi.Models.Pokemon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EvolutionLevel")
                        .HasColumnType("int");

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageShiny")
                        .IsRequired()
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("Type1")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<int?>("Type2")
                        .HasMaxLength(100)
                        .HasColumnType("int");

                    b.Property<string>("Weight")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Pokedex");
                });

            modelBuilder.Entity("SuperEffectiveApi.Models.Effective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Type1")
                        .HasColumnType("int");

                    b.Property<int?>("Type2")
                        .HasColumnType("int");

                    b.Property<int?>("Type3")
                        .HasColumnType("int");

                    b.Property<int?>("Type4")
                        .HasColumnType("int");

                    b.Property<int?>("Type5")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SuperEffective");
                });

            modelBuilder.Entity("TypesApi.Models.PokeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("PokeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypeName = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            TypeName = "Fire"
                        },
                        new
                        {
                            Id = 3,
                            TypeName = "Fighting"
                        },
                        new
                        {
                            Id = 4,
                            TypeName = "Water"
                        },
                        new
                        {
                            Id = 5,
                            TypeName = "Flying"
                        },
                        new
                        {
                            Id = 6,
                            TypeName = "Grass"
                        },
                        new
                        {
                            Id = 7,
                            TypeName = "Poison"
                        },
                        new
                        {
                            Id = 8,
                            TypeName = "Electric"
                        },
                        new
                        {
                            Id = 9,
                            TypeName = "Ground"
                        },
                        new
                        {
                            Id = 10,
                            TypeName = "Psychic"
                        },
                        new
                        {
                            Id = 11,
                            TypeName = "Rock"
                        },
                        new
                        {
                            Id = 12,
                            TypeName = "Ice"
                        },
                        new
                        {
                            Id = 13,
                            TypeName = "Bug"
                        },
                        new
                        {
                            Id = 14,
                            TypeName = "Dragon"
                        },
                        new
                        {
                            Id = 15,
                            TypeName = "Ghost"
                        },
                        new
                        {
                            Id = 16,
                            TypeName = "Dark"
                        },
                        new
                        {
                            Id = 17,
                            TypeName = "Steel"
                        },
                        new
                        {
                            Id = 18,
                            TypeName = "Fairy"
                        });
                });

            modelBuilder.Entity("UsersApi.Models.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<int>("UserActive")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "alessandro@hotmail.com",
                            UserActive = 1,
                            UserName = "alessandro",
                            UserPassword = "123456"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "allan@hotmail.com",
                            UserActive = 1,
                            UserName = "allan",
                            UserPassword = "456789"
                        });
                });

            modelBuilder.Entity("WeaknessesApi.Models.Weakness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Type1")
                        .HasColumnType("int");

                    b.Property<int?>("Type2")
                        .HasColumnType("int");

                    b.Property<int?>("Type3")
                        .HasColumnType("int");

                    b.Property<int?>("Type4")
                        .HasColumnType("int");

                    b.Property<int?>("Type5")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Weaknesses");
                });
#pragma warning restore 612, 618
        }
    }
}
